net1.EBIC.100.time
net1.robsel.TP <- sum(net1.robsel.graph[upper.tri(net1.robsel.graph)]!=0 & true.net1.subset[upper.tri(true.net1.subset)]!=0)
net1.robsel.TP
net1.tiger.TP <- sum(net1.tiger[upper.tri(net1.tiger)]!=0 & true.net1.subset[upper.tri(true.net1.subset)]!=0)
net1.tiger.TP
net1.robsel.total <- sum(net1.robsel.graph[upper.tri(net1.robsel.graph)]!=0)
net1.robsel.total
net1.tiger.total <- sum(net1.tiger[upper.tri(net1.robsel.graph)]!=0)
net1.tiger.total
net1.EBIC.graph.10.TP <- sum(net1.EBIC.graph.10[upper.tri(net1.robsel.graph)]!=0 & true.net1.subset[upper.tri(true.net1.subset)]!=0)
net1.EBIC.graph.10.TP
net1.EBIC.graph.10.total <- sum(net1.EBIC.graph.10[upper.tri(net1.robsel.graph)]!=0)
net1.EBIC.graph.10.total
net1.EBIC.graph.50.TP <- sum(net1.EBIC.graph.50[upper.tri(net1.robsel.graph)]!=0 & true.net1.subset[upper.tri(true.net1.subset)]!=0)
net1.EBIC.graph.50.TP
net1.EBIC.graph.50.total <- sum(net1.EBIC.graph.50[upper.tri(net1.robsel.graph)]!=0)
net1.EBIC.graph.50.total
net1.EBIC.graph.100.TP <- sum(net1.EBIC.graph.100[upper.tri(net1.robsel.graph)]!=0 & true.net1.subset[upper.tri(true.net1.subset)]!=0)
net1.EBIC.graph.100.TP
net1.EBIC.graph.100.total <- sum(net1.EBIC.graph.100[upper.tri(net1.robsel.graph)]!=0)
net1.EBIC.graph.100.total
time.df <- data.frame(method=factor(c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100"),
levels=c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100")),
time=c(net1.robsel.time[3], net1.EBIC.10.time[3], net1.EBIC.50.time[3], net1.EBIC.100.time[3]))
net1.p1 <- ggplot(data=time.df, aes(x=method, y=time)) + geom_bar(stat="identity")
net1.p1
TP.df <- data.frame(method=factor(c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100"),
levels=c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100")),
TP=c(net1.robsel.TP, net1.EBIC.graph.10.TP, net1.EBIC.graph.50.TP, net1.EBIC.graph.100.TP))
net1.p2 <- ggplot(data=TP.df, aes(x=method, y=TP)) + geom_bar(stat="identity")
net1.p2
ratio.df <- data.frame(method=factor(c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100"),
levels=c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100")),
ratio=c(net1.robsel.TP/net1.robsel.total, net1.EBIC.graph.10.TP/net1.EBIC.graph.10.total,
net1.EBIC.graph.50.TP/net1.EBIC.graph.50.total,
net1.EBIC.graph.100.TP/net1.EBIC.graph.100.total))
net1.p3 <- ggplot(data=ratio.df, aes(x=method, y=ratio)) +
geom_bar(stat="identity") +
labs(y = "True Positive / Total Edges")
net1.p3
94/768
ptm <- proc.time()
net1.robsel <- robsel.glasso(data.net1.subset, alpha = 0.9, penalize.diagonal = FALSE)
net1.robsel.graph <- net1.robsel$Omega
net1.robsel.time <- proc.time() - ptm
net1.robsel.time
ptm <- proc.time()
net1.tiger <- huge(x=data.net1.subset, method="tiger", lambda = mean(node.robsel(data.net1.subset, alpha = 0.9)))
net1.tiger <- Matrix(net1.tiger$path[[1]], sparse = F)
net1.tiger.time <- proc.time() - ptm
net1.tiger.time
net1.robsel.TP <- sum(net1.robsel.graph[upper.tri(net1.robsel.graph)]!=0 & true.net1.subset[upper.tri(true.net1.subset)]!=0)
net1.robsel.TP
net1.tiger.TP <- sum(net1.tiger[upper.tri(net1.tiger)]!=0 & true.net1.subset[upper.tri(true.net1.subset)]!=0)
net1.tiger.TP
net1.robsel.total <- sum(net1.robsel.graph[upper.tri(net1.robsel.graph)]!=0)
net1.robsel.total
net1.tiger.total <- sum(net1.tiger[upper.tri(net1.robsel.graph)]!=0)
net1.tiger.total
86/613
105/1304
ptm <- proc.time()
net1.robsel <- robsel.glasso(data.net1.subset, alpha = 0.5, penalize.diagonal = FALSE)
net1.robsel.graph <- net1.robsel$Omega
net1.robsel.time <- proc.time() - ptm
net1.robsel.time
ptm <- proc.time()
net1.tiger <- huge(x=data.net1.subset, method="tiger", lambda = mean(node.robsel(data.net1.subset, alpha = 0.5)))
net1.tiger <- Matrix(net1.tiger$path[[1]], sparse = F)
net1.tiger.time <- proc.time() - ptm
net1.tiger.time
ptm <- proc.time()
net1.robsel <- robsel.glasso(data.net1.subset, alpha = 0.5, penalize.diagonal = T)
net1.robsel.graph <- net1.robsel$Omega
net1.robsel.time <- proc.time() - ptm
net1.robsel.time
net1.robsel.TP <- sum(net1.robsel.graph[upper.tri(net1.robsel.graph)]!=0 & true.net1.subset[upper.tri(true.net1.subset)]!=0)
net1.robsel.TP
net1.tiger.TP <- sum(net1.tiger[upper.tri(net1.tiger)]!=0 & true.net1.subset[upper.tri(true.net1.subset)]!=0)
net1.tiger.TP
net1.robsel.total <- sum(net1.robsel.graph[upper.tri(net1.robsel.graph)]!=0)
net1.robsel.total
net1.tiger.total <- sum(net1.tiger[upper.tri(net1.robsel.graph)]!=0)
net1.tiger.total
time.df <- data.frame(method=factor(c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100"),
levels=c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100")),
time=c(net1.robsel.time[3], net1.EBIC.10.time[3], net1.EBIC.50.time[3], net1.EBIC.100.time[3]))
net1.p1 <- ggplot(data=time.df, aes(x=method, y=time)) + geom_bar(stat="identity")
net1.p1
TP.df <- data.frame(method=factor(c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100"),
levels=c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100")),
TP=c(net1.robsel.TP, net1.EBIC.graph.10.TP, net1.EBIC.graph.50.TP, net1.EBIC.graph.100.TP))
net1.p2 <- ggplot(data=TP.df, aes(x=method, y=TP)) + geom_bar(stat="identity")
net1.p2
ratio.df <- data.frame(method=factor(c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100"),
levels=c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100")),
ratio=c(net1.robsel.TP/net1.robsel.total, net1.EBIC.graph.10.TP/net1.EBIC.graph.10.total,
net1.EBIC.graph.50.TP/net1.EBIC.graph.50.total,
net1.EBIC.graph.100.TP/net1.EBIC.graph.100.total))
net1.p3 <- ggplot(data=ratio.df, aes(x=method, y=ratio)) +
geom_bar(stat="identity") +
labs(y = "True Positive / Total Edges")
net1.p3
ptm <- proc.time()
net1.robsel <- robsel.glasso(data.net1.subset, alpha = 0.5, penalize.diagonal = F)
net1.robsel.graph <- net1.robsel$Omega
net1.robsel.time <- proc.time() - ptm
net1.robsel.time
time.df <- data.frame(method=factor(c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100"),
levels=c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100")),
time=c(net1.robsel.time[3], net1.EBIC.10.time[3], net1.EBIC.50.time[3], net1.EBIC.100.time[3]))
net1.p1 <- ggplot(data=time.df, aes(x=method, y=time)) + geom_bar(stat="identity")
net1.p1
TP.df <- data.frame(method=factor(c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100"),
levels=c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100")),
TP=c(net1.robsel.TP, net1.EBIC.graph.10.TP, net1.EBIC.graph.50.TP, net1.EBIC.graph.100.TP))
net1.p2 <- ggplot(data=TP.df, aes(x=method, y=TP)) + geom_bar(stat="identity")
net1.p2
net1.robsel.total <- sum(net1.robsel.graph[upper.tri(net1.robsel.graph)]!=0)
net1.robsel.total
net1.tiger.total <- sum(net1.tiger[upper.tri(net1.robsel.graph)]!=0)
net1.tiger.total
net1.robsel.TP <- sum(net1.robsel.graph[upper.tri(net1.robsel.graph)]!=0 & true.net1.subset[upper.tri(true.net1.subset)]!=0)
net1.robsel.TP
net1.tiger.TP <- sum(net1.tiger[upper.tri(net1.tiger)]!=0 & true.net1.subset[upper.tri(true.net1.subset)]!=0)
net1.tiger.TP
library(knitr)
library(tidyverse)
library(robsel)
library(qgraph)
library(igraph)
knitr::opts_chunk$set(echo=TRUE,
cache=FALSE,
fig.width=5,
fig.height=5,
fig.align='center')
indent1 = '    '
indent2 = paste(rep(indent1, 2), collapse='')
indent3 = paste(rep(indent1, 3), collapse='')
require(Matrix) # convenient to deal with sparse matrices, has sparseMatrix() in it
########
### read in, clean, and construct data
########
# read in observed data
data.net3.orig <- read.table("DREAM-Ecoli/input-data/net3_expression_data.tsv", header=T, sep="\t")
data.net3.scaled <- scale(data.net3.orig)
net3.TF <- read.table("DREAM-Ecoli/input-data/net3_transcription_factors.tsv")$V1
#data.net1.subset <- data.net1.scaled[,net1.TF]
net3.gene.names <- colnames(data.net3.scaled)
net3.cov <- cov(data.net3.scaled)
net3.gold.standard <- read.table("DREAM-Ecoli/gold-standard/DREAM5_Network3_edges_only.tsv", header=F, sep="\t")
true.net3 <- diag(length(net3.gene.names))
colnames(true.net3) <- net3.gene.names
rownames(true.net3) <- net3.gene.names
for (i in 1:length(net3.gold.standard$V1)) {
tf.row <- net3.gold.standard[i,]
true.net3[tf.row$V1, tf.row$V2] <- tf.row$V3
true.net3[tf.row$V2, tf.row$V1] <- tf.row$V3
}
#true.omega <- (true.omega + t(true.omega)) != 0
#true.omega <- replace(true.omega, true.omega > 0, 1)
true.net3[90:100, 1:10]
# true.net3.TF <- true.net3[net3.TF,net3.TF]
# net3.igraph <- graph_from_adjacency_matrix(true.net3.TF, mode="undirected", diag=FALSE)
# net3.decompose <- decompose.graph(net3.igraph, mode="strong", min.vertices = 2)
# subset.net3 <- as_adjacency_matrix(net3.decompose[[1]], type="both", sparse = F)
# subset.net3.nonsparse <- Matrix(subset.net3, sparse = FALSE)
# net.3.lambd.thr <- max(abs(net3.cov[upper.tri(net3.cov)]))
# net3.adj.mat <- abs(net3.cov) > 0.846*net.3.lambd.thr
#net3.igraph <- graph_from_adjacency_matrix(net3.adj.mat, mode="undirected", diag=FALSE)
# net3.igraph <- graph_from_adjacency_matrix(true.net3, mode="undirected", diag=FALSE)
# net3.decompose <- decompose.graph(net3.igraph, mode="weak", min.vertices=10)
# sapply(net3.decompose, gorder)
# subset.net3 <- as_adjacency_matrix(net3.decompose[[2]], type="both", sparse = T)
# subset.net3.nonsparse <- Matrix(subset.net3, sparse = FALSE)
data.net3.subset <- data.net3.scaled[,net3.TF]
true.net3.subset <- true.net3[net3.TF,net3.TF]
data.net3.subset.cov <- cov(data.net3.subset)
net3.n <- nrow(data.net3.subset)
ptm <- proc.time()
net3.robsel <- robsel.glasso(data.net3.subset, alpha = 0.5, penalize.diagonal = FALSE)
net3.robsel.graph <- net3.robsel$Omega
net3.robsel.time <- proc.time() - ptm
net3.robsel.time
net3.robsel.TP <- sum(net3.robsel.graph[upper.tri(net3.robsel.graph)]!=0 & true.net3.subset[upper.tri(true.net3.subset)]!=0)
net3.robsel.TP
net3.robsel.total <- sum(net3.robsel.graph[upper.tri(net3.robsel.graph)]!=0)
net3.robsel.total
ptm <- proc.time()
net3.robsel <- robsel.glasso(data.net3.subset, alpha = 0.2, penalize.diagonal = FALSE)
net3.robsel.graph <- net3.robsel$Omega
net3.robsel.time <- proc.time() - ptm
net3.robsel.time
net3.robsel.TP <- sum(net3.robsel.graph[upper.tri(net3.robsel.graph)]!=0 & true.net3.subset[upper.tri(true.net3.subset)]!=0)
net3.robsel.TP
net3.robsel.total <- sum(net3.robsel.graph[upper.tri(net3.robsel.graph)]!=0)
net3.robsel.total
ptm <- proc.time()
net3.robsel <- robsel.glasso(data.net3.subset, alpha = 0.05, penalize.diagonal = FALSE)
net3.robsel.graph <- net3.robsel$Omega
net3.robsel.time <- proc.time() - ptm
net3.robsel.time
net3.robsel.TP <- sum(net3.robsel.graph[upper.tri(net3.robsel.graph)]!=0 & true.net3.subset[upper.tri(true.net3.subset)]!=0)
net3.robsel.TP
net3.robsel.TP <- sum(net3.robsel.graph[upper.tri(net3.robsel.graph)]!=0 & true.net3.subset[upper.tri(true.net3.subset)]!=0)
net3.robsel.TP
net3.robsel.total <- sum(net3.robsel.graph[upper.tri(net3.robsel.graph)]!=0)
net3.robsel.total
ptm <- proc.time()
net3.EBIC.graph.10 <- EBICglasso(S=data.net3.subset.cov, n=net3.n, gamma=0.5, penalize.diagonal = FALSE, nlambda=10, lambda.min.ratio=0.05)
net3.EBIC.10.time <- proc.time() - ptm
net3.EBIC.10.time
net3.EBIC.graph.10.TP <- sum(net3.EBIC.graph.10[upper.tri(net3.robsel.graph)]!=0 & true.net3.subset[upper.tri(true.net3.subset)]!=0)
net3.EBIC.graph.10.TP
net3.EBIC.graph.10.total <- sum(net3.EBIC.graph.10[upper.tri(net3.robsel.graph)]!=0)
net3.EBIC.graph.10.total
ptm <- proc.time()
net3.tiger <- huge(x=data.net3.subset, method="tiger", lambda = mean(node.robsel(data.net3.subset, alpha = 0.5)))
net3.tiger <- Matrix(net3.tiger$path[[1]], sparse = F)
net3.tiger.time <- proc.time() - ptm
net3.tiger.time
net3.robsel.TP <- sum(net3.robsel.graph[upper.tri(net3.robsel.graph)]!=0 & true.net3.subset[upper.tri(true.net3.subset)]!=0)
net3.robsel.TP
net3.tiger.TP <- sum(net3.tiger[upper.tri(net3.tiger)]!=0 & true.net3.subset[upper.tri(true.net3.subset)]!=0)
net3.tiger.TP
net3.robsel.TP <- sum(net3.robsel.graph[upper.tri(net3.robsel.graph)]!=0 & true.net3.subset[upper.tri(true.net3.subset)]!=0)
net3.robsel.TP
net3.tiger.TP <- sum(net3.tiger[upper.tri(net3.tiger)]!=0 & true.net3.subset[upper.tri(true.net3.subset)]!=0)
net3.tiger.TP
net3.robsel.total <- sum(net3.robsel.graph[upper.tri(net3.robsel.graph)]!=0)
net3.robsel.total
net3.tiger.total <- sum(net3.tiger[upper.tri(net3.robsel.graph)]!=0)
net3.tiger.total
ptm <- proc.time()
net3.tiger <- huge(x=data.net3.subset, method="tiger", lambda = mean(node.robsel(data.net3.subset, alpha = 0.05)))
net3.tiger <- Matrix(net3.tiger$path[[1]], sparse = F)
net3.tiger.time <- proc.time() - ptm
net3.tiger.time
net3.robsel.TP <- sum(net3.robsel.graph[upper.tri(net3.robsel.graph)]!=0 & true.net3.subset[upper.tri(true.net3.subset)]!=0)
net3.robsel.TP
net3.tiger.TP <- sum(net3.tiger[upper.tri(net3.tiger)]!=0 & true.net3.subset[upper.tri(true.net3.subset)]!=0)
net3.tiger.TP
net3.robsel.total <- sum(net3.robsel.graph[upper.tri(net3.robsel.graph)]!=0)
net3.robsel.total
net3.tiger.total <- sum(net3.tiger[upper.tri(net3.robsel.graph)]!=0)
net3.tiger.total
ptm <- proc.time()
net3.robsel <- robsel.glasso(data.net3.subset, alpha = 0.01, penalize.diagonal = FALSE)
net3.robsel.graph <- net3.robsel$Omega
net3.robsel.time <- proc.time() - ptm
net3.robsel.time
ptm <- proc.time()
net3.tiger <- huge(x=data.net3.subset, method="tiger", lambda = mean(node.robsel(data.net3.subset, alpha = 0.01)))
ptm <- proc.time()
net3.tiger <- huge(x=data.net3.subset, method="tiger", lambda = mean(node.robsel(data.net3.subset, alpha = 0.01)))
net3.tiger <- Matrix(net3.tiger$path[[1]], sparse = F)
net3.tiger.time <- proc.time() - ptm
net3.tiger.time
net3.robsel.TP <- sum(net3.robsel.graph[upper.tri(net3.robsel.graph)]!=0 & true.net3.subset[upper.tri(true.net3.subset)]!=0)
net3.robsel.TP
net3.tiger.TP <- sum(net3.tiger[upper.tri(net3.tiger)]!=0 & true.net3.subset[upper.tri(true.net3.subset)]!=0)
net3.tiger.TP
net3.robsel.total <- sum(net3.robsel.graph[upper.tri(net3.robsel.graph)]!=0)
net3.robsel.total
net3.tiger.total <- sum(net3.tiger[upper.tri(net3.robsel.graph)]!=0)
net3.tiger.total
true.net1.TF <- true.net1[net1.TF,net1.TF]
true.net1.noTF <- true.net1[net1.gene.names[196:1643],net1.gene.names[196:1643]]
net1.igraph <- graph_from_adjacency_matrix(net1.adj.mat, mode="undirected", diag=FALSE)
true.net1.TF <- true.net1[net1.TF,net1.TF]
net1.igraph <- graph_from_adjacency_matrix(true.net1.TF, mode="undirected", diag=FALSE)
net1.decompose <- decompose.graph(net1.igraph, mode="weak", min.vertices=50)
sapply(net1.decompose, gorder)
subset.net1 <- as_adjacency_matrix(net1.decompose[[2]], type="both", sparse = T)
true.net1.TF <- true.net1[net1.TF,net1.TF]
net1.igraph <- graph_from_adjacency_matrix(true.net1.TF, mode="undirected", diag=FALSE)
net1.decompose <- decompose.graph(net1.igraph, mode="weak", min.vertices=50)
sapply(net1.decompose, gorder)
subset.net1 <- as_adjacency_matrix(net1.decompose[[2]], type="both", sparse = T)
true.net1.TF <- true.net1[net1.TF,net1.TF]
net1.igraph <- graph_from_adjacency_matrix(true.net1.TF, mode="undirected", diag=FALSE)
net1.decompose <- decompose.graph(net1.igraph, mode="weak", min.vertices=50)
sapply(net1.decompose, gorder)
subset.net1 <- as_adjacency_matrix(net1.decompose[[1]], type="both", sparse = T)
subset.net1.nonsparse <- Matrix(subset.net1, sparse = FALSE)
true.net1.TF <- true.net1[net1.TF,net1.TF]
net1.igraph <- graph_from_adjacency_matrix(true.net1.TF, mode="undirected", diag=FALSE)
net1.decompose <- decompose.graph(net1.igraph, mode="weak", min.vertices=50)
sapply(net1.decompose, gorder)
subset.net1 <- as_adjacency_matrix(net1.decompose[[1]], type="both", sparse = T)
subset.net1.nonsparse <- Matrix(subset.net1, sparse = FALSE)
subset.net1
subset.net1
subset.net1.nonsparse
true.net1.TF <- true.net1[net1.TF,net1.TF]
net1.igraph <- graph_from_adjacency_matrix(true.net1.TF, mode="undirected", diag=FALSE)
net1.decompose <- decompose.graph(net1.igraph, mode="weak", min.vertices=50)
sapply(net1.decompose, gorder)
subset.net1 <- as_adjacency_matrix(net1.decompose[[1]], type="both", sparse = T)
subset.net1.nonsparse <- Matrix(subset.net1, sparse = FALSE)
data.net1.subset <- data.net1.scaled[,colnames(subset.net1.nonsparse)]
true.net1.subset <- true.net1[colnames(subset.net1.nonsparse),colnames(subset.net1.nonsparse)]
data.net1.subset.cov <- cov(data.net1.subset)
net1.n=nrow(data.net1.subset)
# data.net1.subset <- data.net1.scaled[,net1.TF]
# true.net1.subset <- true.net1[net1.TF,net1.TF]
# data.net1.subset.cov <- cov(data.net1.subset)
# net1.n=nrow(data.net1.subset)
(sum(true.net1.subset)-dim(true.net1.subset)[1])/2
data.net1.subset <- data.net1.scaled[,colnames(subset.net1.nonsparse)]
true.net1.subset <- true.net1[colnames(subset.net1.nonsparse),colnames(subset.net1.nonsparse)]
data.net1.subset.cov <- cov(data.net1.subset)
net1.n=nrow(data.net1.subset)
# data.net1.subset <- data.net1.scaled[,net1.TF]
# true.net1.subset <- true.net1[net1.TF,net1.TF]
# data.net1.subset.cov <- cov(data.net1.subset)
# net1.n=nrow(data.net1.subset)
(sum(true.net1.subset)-dim(true.net1.subset)[1])/2
data.net1.subset <- data.net1.scaled[,colnames(subset.net1.nonsparse)]
true.net1.subset <- true.net1[colnames(subset.net1.nonsparse),colnames(subset.net1.nonsparse)]
data.net1.subset.cov <- cov(data.net1.subset)
net1.n=nrow(data.net1.subset)
# data.net1.subset <- data.net1.scaled[,net1.TF]
# true.net1.subset <- true.net1[net1.TF,net1.TF]
# data.net1.subset.cov <- cov(data.net1.subset)
# net1.n=nrow(data.net1.subset)
(sum(true.net1.subset)-dim(true.net1.subset)[1])/2
dim(data.net1.subset)
net1.n
data.net1.subset <- data.net1.scaled[,colnames(subset.net1.nonsparse)]
true.net1.subset <- true.net1[colnames(subset.net1.nonsparse),colnames(subset.net1.nonsparse)]
data.net1.subset.cov <- cov(data.net1.subset)
net1.n=nrow(data.net1.subset)
# data.net1.subset <- data.net1.scaled[,net1.TF]
# true.net1.subset <- true.net1[net1.TF,net1.TF]
# data.net1.subset.cov <- cov(data.net1.subset)
# net1.n=nrow(data.net1.subset)
(sum(true.net1.subset)-dim(true.net1.subset)[1])/2
ptm <- proc.time()
net1.robsel <- robsel.glasso(data.net1.subset, alpha = 0.5, penalize.diagonal = F)
net1.robsel.graph <- net1.robsel$Omega
net1.robsel.time <- proc.time() - ptm
net1.robsel.time
ptm <- proc.time()
net1.tiger <- huge(x=data.net1.subset, method="tiger", lambda = mean(node.robsel(data.net1.subset, alpha = 0.5)))
net1.tiger <- Matrix(net1.tiger$path[[1]], sparse = F)
net1.tiger.time <- proc.time() - ptm
net1.tiger.time
ptm <- proc.time()
net1.EBIC.graph.10 <- EBICglasso(S=data.net1.subset.cov, n=net1.n, gamma=0.5, penalize.diagonal = FALSE, nlambda=10, lambda.min.ratio=0.05)
net1.EBIC.10.time <- proc.time() - ptm
net1.EBIC.10.time
ptm <- proc.time()
net1.EBIC.graph.50 <- EBICglasso(S=data.net1.subset.cov, n=net1.n, gamma=0.5, penalize.diagonal = FALSE, nlambda=50, lambda.min.ratio=0.05)
net1.EBIC.50.time <- proc.time() - ptm
net1.EBIC.50.time
ptm <- proc.time()
net1.EBIC.graph.100 <- EBICglasso(S=data.net1.subset.cov, n=net1.n, gamma=0.5, penalize.diagonal = FALSE, nlambda=100, lambda.min.ratio=0.05)
net1.EBIC.100.time <- proc.time() - ptm
net1.EBIC.100.time
net1.robsel.TP <- sum(net1.robsel.graph[upper.tri(net1.robsel.graph)]!=0 & true.net1.subset[upper.tri(true.net1.subset)]!=0)
net1.robsel.TP
net1.tiger.TP <- sum(net1.tiger[upper.tri(net1.tiger)]!=0 & true.net1.subset[upper.tri(true.net1.subset)]!=0)
net1.tiger.TP
net1.robsel.total <- sum(net1.robsel.graph[upper.tri(net1.robsel.graph)]!=0)
net1.robsel.total
net1.tiger.total <- sum(net1.tiger[upper.tri(net1.robsel.graph)]!=0)
net1.tiger.total
net1.EBIC.graph.10.TP <- sum(net1.EBIC.graph.10[upper.tri(net1.robsel.graph)]!=0 & true.net1.subset[upper.tri(true.net1.subset)]!=0)
net1.EBIC.graph.10.TP
net1.EBIC.graph.10.total <- sum(net1.EBIC.graph.10[upper.tri(net1.robsel.graph)]!=0)
net1.EBIC.graph.10.total
ptm <- proc.time()
net1.EBIC.graph.10 <- EBICglasso(S=data.net1.subset.cov, n=net1.n, gamma=0.5, penalize.diagonal = FALSE, nlambda=10, lambda.min.ratio=0.01)
net1.EBIC.10.time <- proc.time() - ptm
net1.EBIC.10.time
ptm <- proc.time()
net1.EBIC.graph.50 <- EBICglasso(S=data.net1.subset.cov, n=net1.n, gamma=0.5, penalize.diagonal = FALSE, nlambda=50, lambda.min.ratio=0.01)
net1.EBIC.50.time <- proc.time() - ptm
net1.EBIC.50.time
ptm <- proc.time()
net1.EBIC.graph.100 <- EBICglasso(S=data.net1.subset.cov, n=net1.n, gamma=0.5, penalize.diagonal = FALSE, nlambda=100, lambda.min.ratio=0.01)
net1.EBIC.100.time <- proc.time() - ptm
net1.EBIC.100.time
net1.robsel.TP <- sum(net1.robsel.graph[upper.tri(net1.robsel.graph)]!=0 & true.net1.subset[upper.tri(true.net1.subset)]!=0)
net1.robsel.TP
net1.tiger.TP <- sum(net1.tiger[upper.tri(net1.tiger)]!=0 & true.net1.subset[upper.tri(true.net1.subset)]!=0)
net1.tiger.TP
net1.robsel.total <- sum(net1.robsel.graph[upper.tri(net1.robsel.graph)]!=0)
net1.robsel.total
net1.tiger.total <- sum(net1.tiger[upper.tri(net1.robsel.graph)]!=0)
net1.tiger.total
net1.EBIC.graph.10.TP <- sum(net1.EBIC.graph.10[upper.tri(net1.robsel.graph)]!=0 & true.net1.subset[upper.tri(true.net1.subset)]!=0)
net1.EBIC.graph.10.TP
net1.EBIC.graph.10.total <- sum(net1.EBIC.graph.10[upper.tri(net1.robsel.graph)]!=0)
net1.EBIC.graph.10.total
net1.EBIC.graph.50.TP <- sum(net1.EBIC.graph.50[upper.tri(net1.robsel.graph)]!=0 & true.net1.subset[upper.tri(true.net1.subset)]!=0)
net1.EBIC.graph.50.TP
net1.EBIC.graph.50.total <- sum(net1.EBIC.graph.50[upper.tri(net1.robsel.graph)]!=0)
net1.EBIC.graph.50.total
net1.EBIC.graph.100.TP <- sum(net1.EBIC.graph.100[upper.tri(net1.robsel.graph)]!=0 & true.net1.subset[upper.tri(true.net1.subset)]!=0)
net1.EBIC.graph.100.TP
net1.EBIC.graph.100.total <- sum(net1.EBIC.graph.100[upper.tri(net1.robsel.graph)]!=0)
net1.EBIC.graph.100.total
time.df <- data.frame(method=factor(c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100"),
levels=c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100")),
time=c(net1.robsel.time[3], net1.EBIC.10.time[3], net1.EBIC.50.time[3], net1.EBIC.100.time[3]))
net1.p1 <- ggplot(data=time.df, aes(x=method, y=time)) + geom_bar(stat="identity")
net1.p1
TP.df <- data.frame(method=factor(c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100"),
levels=c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100")),
TP=c(net1.robsel.TP, net1.EBIC.graph.10.TP, net1.EBIC.graph.50.TP, net1.EBIC.graph.100.TP))
net1.p2 <- ggplot(data=TP.df, aes(x=method, y=TP)) + geom_bar(stat="identity")
net1.p2
ratio.df <- data.frame(method=factor(c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100"),
levels=c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100")),
ratio=c(net1.robsel.TP/net1.robsel.total, net1.EBIC.graph.10.TP/net1.EBIC.graph.10.total,
net1.EBIC.graph.50.TP/net1.EBIC.graph.50.total,
net1.EBIC.graph.100.TP/net1.EBIC.graph.100.total))
net1.p3 <- ggplot(data=ratio.df, aes(x=method, y=ratio)) +
geom_bar(stat="identity") +
labs(y = "True Positive / Total Edges")
net1.p3
ptm <- proc.time()
net1.EBIC.graph.10 <- EBICglasso(S=data.net1.subset.cov, n=net1.n, gamma=0.5, penalize.diagonal = FALSE, nlambda=25, lambda.min.ratio=0.01)
net1.EBIC.10.time <- proc.time() - ptm
net1.EBIC.10.time
ptm <- proc.time()
net1.EBIC.graph.50 <- EBICglasso(S=data.net1.subset.cov, n=net1.n, gamma=0.5, penalize.diagonal = FALSE, nlambda=50, lambda.min.ratio=0.01)
net1.EBIC.50.time <- proc.time() - ptm
net1.EBIC.50.time
net1.robsel.TP <- sum(net1.robsel.graph[upper.tri(net1.robsel.graph)]!=0 & true.net1.subset[upper.tri(true.net1.subset)]!=0)
net1.robsel.TP
net1.tiger.TP <- sum(net1.tiger[upper.tri(net1.tiger)]!=0 & true.net1.subset[upper.tri(true.net1.subset)]!=0)
net1.tiger.TP
net1.robsel.total <- sum(net1.robsel.graph[upper.tri(net1.robsel.graph)]!=0)
net1.robsel.total
net1.tiger.total <- sum(net1.tiger[upper.tri(net1.robsel.graph)]!=0)
net1.tiger.total
net1.EBIC.graph.10.TP <- sum(net1.EBIC.graph.10[upper.tri(net1.robsel.graph)]!=0 & true.net1.subset[upper.tri(true.net1.subset)]!=0)
net1.EBIC.graph.10.TP
net1.EBIC.graph.10.total <- sum(net1.EBIC.graph.10[upper.tri(net1.robsel.graph)]!=0)
net1.EBIC.graph.10.total
net1.EBIC.graph.50.TP <- sum(net1.EBIC.graph.50[upper.tri(net1.robsel.graph)]!=0 & true.net1.subset[upper.tri(true.net1.subset)]!=0)
net1.EBIC.graph.50.TP
net1.EBIC.graph.50.total <- sum(net1.EBIC.graph.50[upper.tri(net1.robsel.graph)]!=0)
net1.EBIC.graph.50.total
net1.EBIC.graph.100.TP <- sum(net1.EBIC.graph.100[upper.tri(net1.robsel.graph)]!=0 & true.net1.subset[upper.tri(true.net1.subset)]!=0)
net1.EBIC.graph.100.TP
net1.EBIC.graph.100.total <- sum(net1.EBIC.graph.100[upper.tri(net1.robsel.graph)]!=0)
net1.EBIC.graph.100.total
time.df <- data.frame(method=factor(c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100"),
levels=c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100")),
time=c(net1.robsel.time[3], net1.EBIC.10.time[3], net1.EBIC.50.time[3], net1.EBIC.100.time[3]))
net1.p1 <- ggplot(data=time.df, aes(x=method, y=time)) + geom_bar(stat="identity")
net1.p1
TP.df <- data.frame(method=factor(c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100"),
levels=c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100")),
TP=c(net1.robsel.TP, net1.EBIC.graph.10.TP, net1.EBIC.graph.50.TP, net1.EBIC.graph.100.TP))
net1.p2 <- ggplot(data=TP.df, aes(x=method, y=TP)) + geom_bar(stat="identity")
net1.p2
ratio.df <- data.frame(method=factor(c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100"),
levels=c("RobSel", "EBIC-10", "EBIC-50", "EBIC-100")),
ratio=c(net1.robsel.TP/net1.robsel.total, net1.EBIC.graph.10.TP/net1.EBIC.graph.10.total,
net1.EBIC.graph.50.TP/net1.EBIC.graph.50.total,
net1.EBIC.graph.100.TP/net1.EBIC.graph.100.total))
net1.p3 <- ggplot(data=ratio.df, aes(x=method, y=ratio)) +
geom_bar(stat="identity") +
labs(y = "True Positive / Total Edges")
net1.p3
ratio.df <- data.frame(method=factor(c("GLasso+RobSel","TIGER+RobSel", "EBIC-10", "EBIC-50", "EBIC-100"),
levels=c("GLasso+RobSel", "TIGER+RobSel", "EBIC-10", "EBIC-50", "EBIC-100")),
ratio=c(net1.robsel.TP/net1.robsel.total, net1.tiger.TP/net1.tiger.total,
net1.EBIC.graph.10.TP/net1.EBIC.graph.10.total,
net1.EBIC.graph.50.TP/net1.EBIC.graph.50.total,
net1.EBIC.graph.100.TP/net1.EBIC.graph.100.total))
net1.p3 <- ggplot(data=ratio.df, aes(x=method, y=ratio)) +
geom_bar(stat="identity") +
labs(y = "True Positive / Total Edges")
net1.p3
time.df <- data.frame(method=factor(c("RobSel", "EBIC-25", "EBIC-50", "EBIC-100"),
levels=c("RobSel", "EBIC-25", "EBIC-50", "EBIC-100")),
time=c(net1.robsel.time[3], net1.EBIC.10.time[3], net1.EBIC.50.time[3], net1.EBIC.100.time[3]))
net1.p1 <- ggplot(data=time.df, aes(x=method, y=time)) + geom_bar(stat="identity")
net1.p1
TP.df <- data.frame(method=factor(c("RobSel", "EBIC-25", "EBIC-50", "EBIC-100"),
levels=c("RobSel", "EBIC-25", "EBIC-50", "EBIC-100")),
TP=c(net1.robsel.TP, net1.EBIC.graph.10.TP, net1.EBIC.graph.50.TP, net1.EBIC.graph.100.TP))
net1.p2 <- ggplot(data=TP.df, aes(x=method, y=TP)) + geom_bar(stat="identity")
net1.p2
ratio.df <- data.frame(method=factor(c("GLasso+RobSel","TIGER+RobSel", "EBIC-25", "EBIC-50", "EBIC-100"),
levels=c("GLasso+RobSel", "TIGER+RobSel", "EBIC-25", "EBIC-50", "EBIC-100")),
ratio=c(net1.robsel.TP/net1.robsel.total, net1.tiger.TP/net1.tiger.total,
net1.EBIC.graph.10.TP/net1.EBIC.graph.10.total,
net1.EBIC.graph.50.TP/net1.EBIC.graph.50.total,
net1.EBIC.graph.100.TP/net1.EBIC.graph.100.total))
net1.p3 <- ggplot(data=ratio.df, aes(x=method, y=ratio)) +
geom_bar(stat="identity") +
labs(y = "True Positive / Total Edges")
net1.p3
ptm <- proc.time()
net1.tiger.ric <- huge.select(huge(x=data.net1.subset, method="tiger"), criterion = "ric")
net1.tiger.ric <- Matrix(net1.tiger$path[[1]], sparse = F)
net1.tiger.ric
net1.tiger.ric$opt.lambda
net1.tiger.ric$lambda
which(net1.tiger.ric$lambda == net1.tiger.ric$opt.lambda)
match(net1.tiger.ric$lambda == net1.tiger.ric$opt.lambda)
match(net1.tiger.ric$lambda,net1.tiger.ric$opt.lambda)
huge.select(huge(x=data.net1.subset, method="tiger"), criterion = "ric")
?hhuge.select
?huge.select
