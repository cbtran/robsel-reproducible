library(knitr)
library(tidyverse)
library(robsel)
library(qgraph)
library(igraph)
knitr::opts_chunk$set(echo=TRUE,
cache=FALSE,
fig.width=5,
fig.height=5,
fig.align='center')
indent1 = '    '
indent2 = paste(rep(indent1, 2), collapse='')
indent3 = paste(rep(indent1, 3), collapse='')
require(Matrix) # convenient to deal with sparse matrices, has sparseMatrix() in it
# read in observed data
data.net4.orig <- read.table("DREAM-Scerevisiae/input-data/net4_expression_data.tsv", header=T, sep="\t")
# read in observed data
data.net4.orig <- read.table("DREAM-Scerevisiae/input-data/net4_expression_data.tsv", header=T, sep="\t")
data.net4.scaled <- scale(data.net4.orig)
net4.TF <- read.table("DREAM-Scerevisiae/input-data/net4_transcription_factors.tsv")$V1
#data.net1.subset <- data.net1.scaled[,net1.TF]
net4.gene.names <- colnames(data.net4.scaled)
net4.gold.standard <- read.table("DREAM-Scerevisiae/gold-standard/DREAM5_Network4_edges_only.tsv", header=F, sep="\t")
true.net4 <- diag(length(net4.gene.names))
colnames(true.net4) <- net4.gene.names
rownames(true.net4) <- net4.gene.names
for (i in 1:length(net4.gold.standard$V1)) {
tf.row <- net4.gold.standard[i,]
true.net4[tf.row$V1, tf.row$V2] <- tf.row$V3
true.net4[tf.row$V2, tf.row$V1] <- tf.row$V3
}
#true.omega <- (true.omega + t(true.omega)) != 0
#true.omega <- replace(true.omega, true.omega > 0, 1)
true.net4[90:100, 1:10]
net4.igraph <- graph_from_adjacency_matrix(true.net4, mode="undirected", diag=FALSE)
net4.decompose <- decompose.graph(net4.igraph, mode="weak", min.vertices=2)
sapply(net4.decompose, gorder)
net4.decompose <- decompose.graph(net4.decompose[[1]], mode="weak", max.comps=2)
sapply(net4.decompose, gorder)
subset.net1 <- as_adjacency_matrix(net1.decompose[[1]], type="both", sparse = T)
subset.net4 <- as_adjacency_matrix(net4.decompose[[1]], type="both", sparse = F)
subset.net4.nonsparse <- Matrix(subset.net4, sparse = FALSE)
true.net1.subset <- Matrix(subset.net1, sparse = FALSE)
true.net4.subset <- Matrix(subset.net4, sparse = FALSE)
plot(net4.decompose[[1]])
#plot(net4.decompose[[1]])
length(colnames(true.net4.subset))
data.net4.subset <- data.net4.scaled[,colnames(true.net4.subset)]
true.net4.subset <- true.net4[colnames(true.net4.subset),colnames(true.net4.subset)]
data.net4.subset.cov <- cov(data.net4.subset)
data.net4.subset.cov[1:10,1:10]
library(knitr)
library(tidyverse)
library(robsel)
library(qgraph)
library(igraph)
knitr::opts_chunk$set(echo=TRUE,
cache=FALSE,
fig.width=5,
fig.height=5,
fig.align='center')
indent1 = '    '
indent2 = paste(rep(indent1, 2), collapse='')
indent3 = paste(rep(indent1, 3), collapse='')
require(Matrix) # convenient to deal with sparse matrices, has sparseMatrix() in it
#plot(net2.decompose[[2]])
